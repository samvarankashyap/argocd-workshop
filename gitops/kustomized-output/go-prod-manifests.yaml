# git commit: 77fc765786a97f846c2f93de671a5cb36d6b7dbf
apiVersion: v1
kind: Namespace
metadata:
  name: prod-go
---
apiVersion: v1
data:
  CLUSTER: prod-cluster
  CLUSTER_IMAGE: prod
  IMAGE: quay.io/samvarankashyap/go-argocd-workshop:prod-77fc765786a97f846c2f93de671a5cb36d6b7dbf
  PORT: "8080"
kind: ConfigMap
metadata:
  name: app-envs-2kg2c6k849
  namespace: prod-go
---
apiVersion: v1
data:
  api_key.secret.example: UFJPRF9BUElfS0VZCg==
kind: Secret
metadata:
  name: app-secrets-7266f5km2g
  namespace: prod-go
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  name: go-webapp-service
  namespace: prod-go
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: go-webapp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: go-webapp
  name: go-webapp-deployment
  namespace: prod-go
spec:
  replicas: 2
  selector:
    matchLabels:
      app: go-webapp
  template:
    metadata:
      labels:
        app: go-webapp
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: app-envs-2kg2c6k849
        image: quay.io/samvarankashyap/go-argocd-workshop:prod-77fc765786a97f846c2f93de671a5cb36d6b7dbf
        livenessProbe:
          httpGet:
            path: /go/health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        name: go-webapp-container
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /go/ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: "1"
            memory: 512Mi
          requests:
            cpu: "0.2"
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - NET_RAW
          readOnlyRootFilesystem: true
          runAsUser: 10001
        volumeMounts:
        - mountPath: /secrets
          name: api-key
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      volumes:
      - name: api-key
        secret:
          secretName: app-secrets-7266f5km2g
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app: go-webapp
  name: go-webapp-ingress
  namespace: prod-go
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - backend:
          service:
            name: go-webapp-service
            port:
              number: 8080
        path: /go
        pathType: Prefix
